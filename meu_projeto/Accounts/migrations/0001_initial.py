# Generated by Django 5.0.2 on 2024-09-12 14:26

import Accounts.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Plans_DBTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, null=True, verbose_name='Criação')),
                ('modified', models.DateField(auto_now=True, null=True, verbose_name='Modificação')),
                ('active', models.BooleanField(default=True, null=True, verbose_name='Ativo?')),
                ('planName', models.CharField(max_length=50, unique=True, verbose_name='Nome do Plano')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('usersLimit', models.IntegerField(blank=True, verbose_name='Limite de Usuários')),
                ('storageLimit', models.IntegerField(blank=True, verbose_name='Limite de Armazenamento')),
                ('projectsLimit', models.IntegerField(blank=True, verbose_name='Limite de Projetos')),
            ],
            options={
                'verbose_name': 'Plano',
                'verbose_name_plural': 'Planos',
            },
        ),
        migrations.CreateModel(
            name='Company_DBTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, null=True, verbose_name='Criação')),
                ('modified', models.DateField(auto_now=True, null=True, verbose_name='Modificação')),
                ('active', models.BooleanField(default=True, null=True, verbose_name='Ativo?')),
                ('companyName', models.CharField(max_length=50, unique=True, verbose_name='Nome da Empresa')),
                ('CNPJ', models.CharField(max_length=50, verbose_name='CNPJ')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Endereço')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, choices=[('Acre', 'Acre'), ('Alagoas', 'Alagoas'), ('Amapá', 'Amapá'), ('Amazonas', 'Amazonas'), ('Bahia', 'Bahia'), ('Ceará', 'Ceará'), ('Distrito Federal', 'Distrito Federal'), ('Espírito Santo', 'Espírito Santo'), ('Goiás', 'Goiás'), ('Maranhão', 'Maranhão'), ('Mato Grosso', 'Mato Grosso'), ('Mato Grosso do Sul', 'Mato Grosso do Sul'), ('Minas Gerais', 'Minas Gerais'), ('Pará', 'Pará'), ('Paraíba', 'Paraíba'), ('Paraná', 'Paraná'), ('Pernambuco', 'Pernambuco'), ('Piauí', 'Piauí'), ('Rio de Janeiro', 'Rio de Janeiro'), ('Rio Grande do Norte', 'Rio Grande do Norte'), ('Rio Grande do Sul', 'Rio Grande do Sul'), ('Rondônia', 'Rondônia'), ('Roraima', 'Roraima'), ('Santa Catarina', 'Santa Catarina'), ('São Paulo', 'São Paulo'), ('Sergipe', 'Sergipe'), ('Tocantins', 'Tocantins')], max_length=19, null=True, verbose_name='Estado')),
                ('telephone', models.BigIntegerField(blank=True, null=True, verbose_name='Telefone')),
                ('logotipo', models.ImageField(blank=True, null=True, upload_to='empresas/logos', verbose_name='Logotipo')),
                ('site', models.CharField(blank=True, null=True, verbose_name='Site')),
                ('comercialEmail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Comercial')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Accounts.plans_dbtable')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
            },
        ),
        migrations.CreateModel(
            name='CustomUser_DBTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('firstName', models.CharField(max_length=100, null=True, verbose_name='Nome')),
                ('lastName', models.CharField(max_length=100, null=True, verbose_name='Sobrenome')),
                ('profileImage', models.ImageField(blank=True, upload_to='usuarios/perfil', verbose_name='Imagem de Perfil')),
                ('companyPosition', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('CPF', models.CharField(blank=True, max_length=14, null=True, verbose_name='CPF')),
                ('phone', models.BigIntegerField(blank=True, null=True, verbose_name='Telefone')),
                ('firstAcess', models.BooleanField(default=True, verbose_name='Primeiro Acesso?')),
                ('companyId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Accounts.company_dbtable')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customusuario_groups', related_query_name='customusuario', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customusuario_user_permissions', related_query_name='customusuario', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', Accounts.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='company_dbtable',
            name='users',
            field=models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL),
        ),
    ]
