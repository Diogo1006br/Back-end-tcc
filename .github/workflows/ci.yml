name: Django CI/CD with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest

    steps:
      # Etapa 1: Clonar o repositório
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Necessário para relevância de análise no SonarCloud

      # Etapa 2: Configurar o Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Etapa 3: Instalar dependências
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django pytest-cov

      # Etapa 4: Configurar o PYTHONPATH e rodar os testes com cobertura
      - name: Run tests and generate coverage
        env:
          PYTHONPATH: ${{ github.workspace }}/meu_projeto
        run: |
          pytest

      # Etapa 5: Verificar se o arquivo coverage.xml foi gerado
      - name: Check coverage.xml
        run: |
          if [ -f coverage.xml ]; then
            echo "coverage.xml found"
          else
            echo "coverage.xml not found"
            exit 1
          fi

      # Etapa 6: Configurar o SonarCloud e rodar a análise
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=Diogo1006br_Back-end-tcc
            -Dsonar.organization=diogo1006br
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=meu_projeto
            -Dsonar.exclusions=**/migrations/**,**/__pycache__/**,**/venv/**
            -Dsonar.tests=meu_projeto
            -Dsonar.test.inclusions=**/tests.py
